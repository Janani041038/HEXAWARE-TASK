'TASK-1'

CREATE DATABASE TechShop;
USE TechShop;
  
-- Create Tables
CREATE TABLE Customers (
    CustomerID INT PRIMARY KEY,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(15),
    Address VARCHAR(255)
);
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Description TEXT,
    Price DECIMAL(10,2)
);
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10,2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);
CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
CREATE TABLE Inventory (
    InventoryID INT PRIMARY KEY,
    ProductID INT,
    QuantityInStock INT,
    LastStockUpdate DATE,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
); 

-- Insert Data 
INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone, Address) VALUES
(1, 'John', 'Doe', 'john.doe@example.com', '1234567890', '123 Main St'),
(2, 'Jane', 'Smith', 'jane.smith@example.com', '2345678901', '456 Oak Ave'),
(3, 'Alice', 'Johnson', 'alice.j@example.com', '3456789012', '789 Pine Blvd'),
(4, 'Bob', 'Williams', 'bob.w@example.com', '4567890123', '321 Maple Rd'),
(5, 'Emma', 'Brown', 'emma.b@example.com', '5678901234', '654 Cedar St'),
(6, 'Liam', 'Taylor', 'liam.t@example.com', '6789012345', '147 Birch Ln'),
(7, 'Olivia', 'Davis', 'olivia.d@example.com', '7890123456', '258 Spruce Way'),
(8, 'Noah', 'Miller', 'noah.m@example.com', '8901234567', '369 Walnut Pl'),
(9, 'Ava', 'Wilson', 'ava.w@example.com', '9012345678', '951 Redwood Dr'),
(10, 'Ethan', 'Moore', 'ethan.m@example.com', '0123456789', '753 Chestnut Ct'); 
INSERT INTO Products (ProductID, ProductName, Description, Price) VALUES
(1, 'Smartphone', '6.5-inch display, 128GB storage', 299.99),
(2, 'Laptop', '15.6-inch, Intel i5, 8GB RAM', 599.99),
(3, 'Tablet', '10-inch screen, 64GB storage', 199.99),
(4, 'Smartwatch', 'Heart rate monitor, GPS', 149.99),
(5, 'Bluetooth Speaker', 'Waterproof, 10h battery', 49.99),
(6, 'Wireless Earbuds', 'Noise cancelling, Bluetooth 5.0', 79.99),
(7, 'Gaming Console', '500GB, Dual controller', 399.99),
(8, 'Camera', 'DSLR, 24MP, 18-55mm lens', 449.99),
(9, 'Router', 'Dual-band, 1200 Mbps', 59.99),
(10, 'External Hard Drive', '1TB, USB 3.0', 89.99); 
INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount) VALUES
(1, 1, '2024-03-01', 749.98),
(2, 2, '2024-03-02', 199.99),
(3, 3, '2024-03-05', 449.99),
(4, 4, '2024-03-06', 299.99),
(5, 5, '2024-03-08', 149.99),
(6, 6, '2024-03-10', 399.99),
(7, 7, '2024-03-11', 59.99),
(8, 8, '2024-03-15', 89.99),
(9, 9, '2024-03-16', 679.98),
(10, 10, '2024-03-20', 149.98); 
INSERT INTO OrderDetails (OrderDetailID, OrderID, ProductID, Quantity) VALUES
(1, 1, 1, 1),
(2, 1, 4, 1),
(3, 2, 3, 1),
(4, 3, 8, 1),
(5, 4, 1, 1),
(6, 5, 4, 1),
(7, 6, 7, 1),
(8, 7, 9, 1),
(9, 8, 10, 1),
(10, 9, 2, 1); 
INSERT INTO Inventory (InventoryID, ProductID, QuantityInStock, LastStockUpdate) VALUES
(1, 1, 50, '2024-03-01'),
(2, 2, 30, '2024-03-01'),
(3, 3, 40, '2024-03-01'),
(4, 4, 25, '2024-03-01'),
(5, 5, 60, '2024-03-01'),
(6, 6, 45, '2024-03-01'),
(7, 7, 20, '2024-03-01'),
(8, 8, 15, '2024-03-01'),
(9, 9, 35, '2024-03-01'),
(10, 10, 55, '2024-03-01');  

'TASK - 2'

#QUERY 1
SELECT FirstName, LastName, Email FROM Customers;

#QUERY 2
SELECT 
    o.OrderID,
    o.OrderDate,
    c.FirstName,
    c.LastName
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID;

 #QUERY 3
INSERT INTO Customers (CustomerID, FirstName, LastName, Email, Phone, Address)
VALUES (11, 'Ravi', 'Kumar', 'ravi.k@example.com', '9876543210', '101 Tech Park Street'); 

#QUERY 4
UPDATE Products
SET Price = ROUND(Price * 1.10, 2);  

#QUERY 5
SET @orderID = 3;
DELETE FROM OrderDetails WHERE OrderID = @orderID;
DELETE FROM Orders WHERE OrderID = @orderID;

#QUERY 6
INSERT INTO Orders (OrderID, CustomerID, OrderDate, TotalAmount)
VALUES (11, 4, CURDATE(), 549.99); 

#QUERY 7
UPDATE Customers
SET Email = 'updated.email@example.com',
    Address = 'New Updated Address'
WHERE CustomerID = 1; 

#QUERY 8
UPDATE Orders o
JOIN (
    SELECT od.OrderID, SUM(p.Price * od.Quantity) AS NewTotal
    FROM OrderDetails od
    JOIN Products p ON od.ProductID = p.ProductID
    GROUP BY od.OrderID
) AS calc ON o.OrderID = calc.OrderID
SET o.TotalAmount = ROUND(calc.NewTotal, 2); 

#QUERY 9
SET @customerID = 5;
DELETE od FROM OrderDetails od
JOIN Orders o ON od.OrderID = o.OrderID
WHERE o.CustomerID = @customerID;
DELETE FROM Orders WHERE CustomerID = @customerID; 

#QUERY 10
INSERT INTO Products (ProductID, ProductName, Description, Price)
VALUES (11, 'Smart LED TV', '50-inch 4K UHD Smart TV', 499.99); 

#QUERY 11
ALTER TABLE Orders ADD COLUMN Status VARCHAR(20) DEFAULT 'Pending';
UPDATE Orders
SET Status = 'Shipped'
WHERE OrderID = 1;
     
#QUERY 12
ALTER TABLE Customers ADD COLUMN OrderCount INT DEFAULT 0;
UPDATE Customers c
JOIN (
    SELECT CustomerID, COUNT(*) AS cnt
    FROM Orders
    GROUP BY CustomerID
) AS order_summary ON c.CustomerID = order_summary.CustomerID
SET c.OrderCount = order_summary.cnt;

     
'TASK - 3'
#QUERY 1
SELECT 
    o.OrderID, o.OrderDate, o.TotalAmount,
    c.FirstName, c.LastName
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID;

#QUERY 2
SELECT 
    p.ProductName,
    SUM(p.Price * od.Quantity) AS TotalRevenue
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID; 

#QUERY 3
SELECT DISTINCT c.CustomerID, c.FirstName, c.LastName, c.Email, c.Phone
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID; 

#QUERY 4
SELECT 
    p.ProductName,
    SUM(od.Quantity) AS TotalOrdered
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID
ORDER BY TotalOrdered DESC
LIMIT 1; 

#QUERY 5
SELECT ProductID, ProductName FROM Products;

#QUEY 6
SELECT 
    c.CustomerID,
    c.FirstName,
    c.LastName,
    AVG(o.TotalAmount) AS AvgOrderValue
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID; 

#QUERY 7
SELECT 
    o.OrderID,
    c.FirstName,
    c.LastName,
    o.TotalAmount
FROM Orders o
JOIN Customers c ON o.CustomerID = c.CustomerID
ORDER BY o.TotalAmount DESC
LIMIT 1;  

#QUERY 8
SELECT 
    p.ProductName,
    COUNT(od.OrderDetailID) AS TimesOrdered
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY p.ProductID; 

#QUERY 9
SET @productName = 'Laptop';
SELECT DISTINCT c.CustomerID, c.FirstName, c.LastName
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
JOIN OrderDetails od ON o.OrderID = od.OrderID
JOIN Products p ON od.ProductID = p.ProductID
WHERE p.ProductName = @productName;


#QUERY 10
SET @startDate = '2024-03-01';
SET @endDate = '2024-03-31';
SELECT 
    SUM(TotalAmount) AS RevenueInPeriod
FROM Orders
WHERE OrderDate BETWEEN @startDate AND @endDate;   

'TASK - 4'

#QUERY 1
SELECT CustomerID, FirstName, LastName
FROM Customers
WHERE CustomerID NOT IN (
    SELECT DISTINCT CustomerID FROM Orders
); 

#QUERY 2
SELECT COUNT(*) AS TotalProducts FROM Products; 

#QUERY 3
SELECT SUM(TotalAmount) AS TotalRevenue FROM Orders;
 
#QUERY 4
SELECT AVG(od.Quantity) AS AvgQuantity
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID; 
 
#QUERY 5
SET @customerID = 2;
SELECT SUM(TotalAmount) AS RevenueByCustomer
FROM Orders
WHERE CustomerID = @customerID;
 
#QUERY 6
SELECT 
    c.CustomerID, c.FirstName, c.LastName,
    COUNT(o.OrderID) AS TotalOrders
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID
ORDER BY TotalOrders DESC
LIMIT 1;
   
#QUERY 7
SELECT 
    p.ProductName,
    SUM(od.Quantity) AS TotalOrdered
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY od.ProductID
ORDER BY TotalOrdered DESC
LIMIT 1; 
 
#QUERY 8
SELECT 
    c.CustomerID, c.FirstName, c.LastName,
    SUM(o.TotalAmount) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID
ORDER BY TotalSpent DESC
LIMIT 1;
 
#QUERY 9
SELECT AVG(TotalAmount) AS AvgOrderValue FROM Orders;
 
#QUERY 10
SELECT 
    c.CustomerID, c.FirstName, c.LastName,
    COUNT(o.OrderID) AS OrderCount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID;


































